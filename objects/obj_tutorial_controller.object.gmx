<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tutorial_text_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial variables (1st text part 1)

//Center the text box
x = room_width/2;
y = room_height;

//Counter used in the draw event for the radio sound waves
radio_img_counter = 0;

//X and Y positions of where to draw first line of text
textx = room_width/2;
texty = 620;

//1st text part 1
text = scr_text("Hey " + global.username + "! Seeing that it's your first", textx, texty, Pixel, c_black);
text_previous1 = noone; //Declare variables that will store previous text
text_previous2 = noone; //when new text is drawn in the next alarm
//Set alarm for next text
alarm[0] = room_speed * 1.8;
//State used for the skip event
state = 0;

can_seat = false;

//Radio variable
current_radio_sound = noone;
played_end = false;

//Bool whether or not to draw continue text
draw_continue = false;
draw_continue_delay = false;
draw_continue_counter = room_speed * 1.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///7th text part 1 (getting ID)

with text instance_destroy();
with text_previous1 instance_destroy();

text = scr_text("Now take the ID.", textx, texty, Pixel, c_black);

scr_play_sound(s_glow);

var inst = instance_create(x,y,obj_tutorial_controller2);
inst.text = text;
inst.can_take_id = true;
//Change state used for the skip event
inst.state = 12;

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///6th text part 2 

text_previous1 = text;

text = scr_text("decide on a game.", textx, texty+30, Pixel, c_black);
alarm[11] = room_speed * 4.4;

//Change state used for the skip event
state = 11;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///6th text part 1 (seated patron)

with text instance_destroy();
with text_previous1 instance_destroy();

draw_continue = false;

text = scr_text("Great! Now wait for the patron to", textx, texty, Pixel, c_black);
alarm[10] = room_speed * 1.6;

//Change state used for the skip event
state = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///5th text part 2

text_previous1 = text;

text = scr_text("table.", textx, texty+30, Pixel, c_black);

//State used for the skip event
state = 9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///5th text part 1 (create queue)

var inst = instance_create(800,272,obj_queue);
inst.alarm[0] = 1;
inst.tutorial = true;
with text instance_destroy();

text = scr_text("Click and drag the patron to an empty", textx, texty, Pixel, c_black);
alarm[8] = room_speed * 1.7;
with(obj_table_empty) image_index = 1;

scr_play_sound(s_glow);

can_seat = true;

draw_continue = false;

//Change state used for the skip event
state = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///4th text part 1

with text instance_destroy();
with text_previous1 instance_destroy();
with text_previous2 instance_destroy();
with(obj_cart) image_index = 0;

text = scr_text("Look, here comes a patron now!", textx, texty, Pixel, c_black);

draw_continue = false;
draw_continue_delay = true;

//Change state used for the skip event
state = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///3rd text part 3

text_previous2 = text;
text = scr_text(" out games to patrons.", textx, texty+60, Pixel, c_black);

draw_continue_delay = true;

//State used for the skip event
state = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///3rd text part 2

text_previous1 = text;
text = scr_text("come to play games. Your job is to lend", textx, texty+30, Pixel, c_black);
alarm[5] = room_speed * 1.7;

//State used for the skip event
state = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///3rd text part 1

with text instance_destroy();
text = scr_text("This is the game cart where patrons", textx, texty, Pixel, c_black);
with(obj_cart) image_index = 1;
scr_play_sound(s_glow);
alarm[4] = room_speed * 1.7;

draw_continue = false;

//Change state used for the skip event
state = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///2nd text part 1 (create room objects)

instance_create(x,y, obj_tutorial_object_creator);

with text instance_destroy();
with text_previous1 instance_destroy();
with text_previous2 instance_destroy();

text = scr_text("Here is where you'll be working.", textx, texty, Pixel, c_black);

draw_continue = false;
draw_continue_delay = true;

//Change state used for the skip event
state = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///1st text part 3

text_previous2 = text;
text = scr_text("park...", textx, texty+60, Pixel, c_black);

draw_continue_delay = true;

//State used for the skip event
state = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///1st text part 2

text_previous1 = text;
text = scr_text("day on the job, let's take a tour of the", textx, texty+30, Pixel, c_black);

alarm[1] = room_speed * 1.8;

//State used for the skip event
state = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if player moved patron

if (can_seat) {
    if(instance_exists(obj_table_seated)) {
        can_seat = false;
        alarm[9] = 1;
    }
}

if(draw_continue_delay) {
    draw_continue_counter--;
    if(draw_continue_counter &lt;= 0) {
        draw_continue_delay = false;
        draw_continue_counter = room_speed * 1.3;
        draw_continue = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Skip state in tutorial text

switch(state) {
    case 0:
        alarm[0] = 1;
        break;
    case 1:
        alarm[1] = 1;
        break;
    case 2:
        alarm[2] = 1;
        break;
    case 3:
        alarm[3] = 1;
        break;
    case 4:
        alarm[4] = 1;
        break;
    case 5:
        alarm[5] = 1;
        break;
    case 6:
        alarm[6] = 1;
        break;
    case 7:
        alarm[7] = 1;
        break;
    case 8:
        alarm[8] = 1;
        break;
    case 9:
        //Requires placing patron
        break;
    case 10:
        //Requires waiting
        break;
    case 11:
        //Requires waiting for patron to decide on game
        break;
    //See obj_tutorial_controller2 for more
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text box, radio, sound waves


draw_sprite(spr_radio, 0, 250, 750);
draw_self();


//If the current text is being drawn
if(text) {
    if(text.is_drawing) { 
        played_end = false;
        //Audio for radio script
        scr_radio();
        //Makesure text counter is between 0-2
        if(radio_img_counter &gt; 6) radio_img_counter = 0;
        
        //Draw the subimages of the radio sound
        draw_sprite_ext(spr_radio_sound, floor(radio_img_counter), 250+60, 630, -1, 1, 0, c_white, 1);
        draw_sprite_ext(spr_radio_sound, floor(radio_img_counter), 250-60, 630, 1, 1, 0, c_white, 1);
        
        //Increment the text_counter
        radio_img_counter += 0.1;
    } else { 
        audio_stop_sound(current_radio_sound);
        if(!played_end) {
            scr_play_sound(s_end);
            played_end = true;
        }
    }
}

//Draw the 'Tap to continue' text
if(draw_continue) {
    draw_sprite(spr_tap_to_continue, 0, x, y-30);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
