<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_GUI_points</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Points variables
x = 300;
y = 0;

//Remmber the ID of the controller so patron/player object can interact
global.points_controller = id;
points_given_object = noone;
points = 0;
points_font = Pixel;

//Most recent player action
//  0 = none
//  1 = placed player
//  2 = picked up ID
//  3 = delivered game
//  4 = picked up game
//  5 = returned ID
points_previous_action = 0;
points_current_action = 0;
points_combo_multiplier = 1;
patron_id = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increase happiness, give points

//Increase happiness
patron_id.happiness += 2;
//Reset happiness_timer
patron_id.happiness_timer = room_speed * patron_id.happiness_decay

//Check for combo
if(points_previous_action == points_current_action ) {
    points_combo_multiplier *= 1.20;
} else {
    points_combo_multiplier = 1;
}

//Increase points by patron's base points times multiplier
var points_to_give = patron_id.base_points * points_combo_multiplier;
global.points_controller.points += points_to_give;

if(points_given_object != noone) {
    with (points_given_object) {
        instance_destroy();
    }
}
points_given_object = instance_create(x+80, y+90, obj_points_given);  
points_given_object.pts = points_to_give;


scr_play_sound(s_points);

//Create the coin object that will display point value 
scr_create_points(points_to_give, patron_id.table_id.x-8, patron_id.table_id.y-20);

//Record the previous action used for the next action
points_previous_action = points_current_action;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw points
draw_self();

draw_set_font(GUI_font);
draw_set_color(c_white);
draw_set_halign(fa_middle);
draw_set_valign(fa_middle);

draw_text(x-60, y+90, string(floor(points)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
